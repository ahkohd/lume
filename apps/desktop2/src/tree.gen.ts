/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/app'
import { Route as IndexImport } from './routes/index'
import { Route as LandingIndexImport } from './routes/landing/index'

// Create Virtual Routes

const AuthImportLazyImport = createFileRoute('/auth/import')()
const AuthCreateLazyImport = createFileRoute('/auth/create')()
const AppSpaceLazyImport = createFileRoute('/app/space')()

// Create/Update Routes

const AppRoute = AppImport.update({
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LandingIndexRoute = LandingIndexImport.update({
  path: '/landing/',
  getParentRoute: () => rootRoute,
} as any)

const AuthImportLazyRoute = AuthImportLazyImport.update({
  path: '/auth/import',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/import.lazy').then((d) => d.Route))

const AuthCreateLazyRoute = AuthCreateLazyImport.update({
  path: '/auth/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/create.lazy').then((d) => d.Route))

const AppSpaceLazyRoute = AppSpaceLazyImport.update({
  path: '/space',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/app/space.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/space': {
      preLoaderRoute: typeof AppSpaceLazyImport
      parentRoute: typeof AppImport
    }
    '/auth/create': {
      preLoaderRoute: typeof AuthCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/import': {
      preLoaderRoute: typeof AuthImportLazyImport
      parentRoute: typeof rootRoute
    }
    '/landing/': {
      preLoaderRoute: typeof LandingIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AppRoute.addChildren([AppSpaceLazyRoute]),
  AuthCreateLazyRoute,
  AuthImportLazyRoute,
  LandingIndexRoute,
])

/* prettier-ignore-end */
