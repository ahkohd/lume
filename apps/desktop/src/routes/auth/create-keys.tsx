import { useArk } from "@lume/ark";
import { useStorage } from "@lume/storage";
import { onboardingAtom } from "@lume/utils";
import { NDKPrivateKeySigner } from "@nostr-dev-kit/ndk";
import { desktopDir } from "@tauri-apps/api/path";
import { save } from "@tauri-apps/plugin-dialog";
import { writeTextFile } from "@tauri-apps/plugin-fs";
import { useSetAtom } from "jotai";
import { nanoid } from "nanoid";
import { getPublicKey, nip19 } from "nostr-tools";
import { useNavigate } from "react-router-dom";
import { toast } from "sonner";

export function CreateAccountKeys() {
	const ark = useArk();
	const storage = useStorage();
	const setOnboarding = useSetAtom(onboardingAtom);
	const navigate = useNavigate();

	const generateNostrKeys = async () => {
		const signer = NDKPrivateKeySigner.generate();
		const pubkey = getPublicKey(signer.privateKey);

		const npub = nip19.npubEncode(pubkey);
		const nsec = nip19.nsecEncode(signer.privateKey);

		ark.updateNostrSigner({ signer });

		const downloadPath = await desktopDir();
		const fileName = `nostr_keys_${nanoid(4)}.txt`;
		const filePath = await save({
			defaultPath: `${downloadPath}/${fileName}`,
		});

		if (!filePath) {
			return toast.info("You need to save account keys before continue.");
		}

		await writeTextFile(
			filePath,
			`Nostr Account\nGenerated by Lume (lume.nu)\n---\nPublic key: ${npub}\nPrivate key: ${nsec}`,
		);

		await storage.createAccount({
			pubkey: pubkey,
			privkey: signer.privateKey,
		});

		setOnboarding({ open: true, newUser: true });

		return navigate("/auth/onboarding", { replace: true });
	};

	return (
		<div className="relative flex items-center justify-center w-full h-full">
			<div className="flex flex-col w-full max-w-md gap-16 mx-auto">
				<div className="flex flex-col gap-1 text-center items-center">
					<h1 className="text-2xl font-semibold">Create Account</h1>
				</div>
				<div className="flex flex-col gap-3 mb-0">
					<div className="flex flex-col gap-2">
						<label
							htmlFor="npub"
							className="text-sm font-semibold uppercase text-neutral-600"
						>
							Public Key
						</label>
						<input
							readOnly
							type="text"
							className="px-3 text-xl border-transparent rounded-xl h-14 bg-neutral-900 placeholder:text-neutral-600 focus:border-blue-500 focus:ring focus:ring-blue-800"
						/>
					</div>
					<div className="flex flex-col gap-2">
						<label
							htmlFor="nsec"
							className="text-sm font-semibold uppercase text-neutral-600"
						>
							Private Key
						</label>
						<input
							readOnly
							type="text"
							className="px-3 text-xl border-transparent rounded-xl h-14 bg-neutral-900 placeholder:text-neutral-600 focus:border-blue-500 focus:ring focus:ring-blue-800"
						/>
					</div>
				</div>
			</div>
		</div>
	);
}
